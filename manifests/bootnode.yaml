apiVersion: v1
kind: ConfigMap
metadata:
  name: bootnode-config
  namespace: $CLUSTER_NAME
data:
  CHARON_JAEGER_ADDRESS: "jaeger:6831"
  CHARON_P2P_TCP_ADDRESS: "0.0.0.0:16003"
  CHARON_P2P_UDP_ADDRESS: "0.0.0.0:16004"
  CHARON_SIMNET_BEACON_MOCK: "false"
  CHARON_SIMNET_VALIDATOR_MOCK: "false"
  CHARON_LOG_LEVEL: "debug"
  CHARON_BEACON_NODE_ENDPOINT: "$CHARON_BEACON_NODE_ENDPOINT"
  CHARON_BOOTNODE_HTTP_ADDRESS: "0.0.0.0:16000"
  CHARON_MANIFEST_FILE: "/charon/cluster-lock.json"
  CHARON_DATA_DIR: /charon/bootnode
  CHARON_P2P_BOOTNODES: ""
  CHARON_P2P_EXTERNAL_HOSTNAME: bootnode
  NODES_COUNT: "3"
  THRESHOLD: "2"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bootnode
  name: bootnode
  namespace: $CLUSTER_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bootnode
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: bootnode
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: bootnode
          image: ghcr.io/obolnetwork/charon:$CHARON_VERSION
          command: ["/usr/local/bin/charon"]
          args: ["bootnode"]
          readinessProbe:
            httpGet:
              path: /enr
              port: 16000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /enr
              port: 16000
            initialDelaySeconds: 20
            periodSeconds: 5
          envFrom:
            - configMapRef:
                name: bootnode-config
          volumeMounts:
            - name: charon
              mountPath: /charon
          workingDir: /charon
      initContainers:
        - name: create-cluster
          image: ghcr.io/obolnetwork/charon:$CHARON_VERSION
          command:
          - sh
          - -ace
          - |
            rm -rf /charon/* 2>/dev/null || true;
            mkdir -p /charon/split_keys;
            cp /tmp/keystore-vc* /charon/split_keys/;
            charon create cluster --split-existing-keys --split-keys-dir=/charon/split_keys --cluster-dir="/charon";
          volumeMounts:
            - name: charon
              mountPath: /charon
            - name: keystore
              mountPath: /tmp/keystore-vc.json
              subPath: keystore-vc.json
              readOnly: true
            - name: keystore
              mountPath: /tmp/keystore-vc.txt
              subPath: keystore-vc.txt
              readOnly: true
      volumes:
        - name: charon
          persistentVolumeClaim:
            claimName: ${CLUSTER_NAME}-pvc
        - name: keystore
          secret:
            secretName: keystore
            items:
              - key: keystore
                path: ./keystore-vc.json
              - key: password
                path: ./keystore-vc.txt
---
apiVersion: v1
kind: Service
metadata:
  name: bootnode
  namespace: $CLUSTER_NAME
spec:
  selector:
    app: bootnode
  ports:
    - name: http
      protocol: TCP
      port: 16000
      targetPort: 16000
    - name: p2p-tcp
      protocol: TCP
      port: 16003
      targetPort: 16003
    - name: p2p-udp
      protocol: UDP
      port: 16004
      targetPort: 16004
