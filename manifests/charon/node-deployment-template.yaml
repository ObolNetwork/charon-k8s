apiVersion: v1
kind: ConfigMap
metadata:
  name: $NODE_NAME-config
  namespace: $CLUSTER_NAME
data:
  CHARON_JAEGER_ADDRESS: "jaeger:6831"
  CHARON_MONITORING_ADDRESS: "0.0.0.0:3620"
  CHARON_VALIDATOR_API_ADDRESS: "0.0.0.0:3600"
  CHARON_P2P_TCP_ADDRESS: "0.0.0.0:3610"
  CHARON_P2P_UDP_ADDRESS: "0.0.0.0:3630"
  CHARON_P2P_BOOTNODES: $CHARON_BOOT_NODE_ENDPOINT
  CHARON_SIMNET_BEACON_MOCK: "false"
  CHARON_SIMNET_VALIDATOR_MOCK: "false"
  CHARON_LOG_LEVEL: "debug"
  CHARON_BEACON_NODE_ENDPOINT: $BEACON_NODE_ENDPOINT
  CHARON_DATA_DIR: "/charon/$NODE_NAME"
  CHARON_LOCK_FILE: "/charon/cluster-lock.json"
  CHARON_JAEGER_SERVICE: $NODE_NAME
  CHARON_P2P_EXTERNAL_HOSTNAME: $NODE_NAME
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: $NODE_NAME
  name: $NODE_NAME
  namespace: $CLUSTER_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $NODE_NAME
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: $NODE_NAME
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: $NODE_NAME
          image: ghcr.io/obolnetwork/charon:$CHARON_VERSION
          command: ["/usr/local/bin/charon"]
          args: ["run"]
          readinessProbe:
            httpGet:
              path: /metrics
              port: 3620
            initialDelaySeconds: 5
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /metrics
              port: 3620
            initialDelaySeconds: 10
            periodSeconds: 5
          envFrom:
            - configMapRef:
                name: $NODE_NAME-config
          volumeMounts:
            - name: keystore
              mountPath: /charon/$NODE_NAME/validator_keys
            - name: private-key
              mountPath: /charon/$NODE_NAME
            - name: cluster-lock
              mountPath: /charon
      volumes:
        - name: keystore
          projected:
            sources:
            - secret:
                name: $NODE_NAME-keystore
            - secret:
                name: $NODE_NAME-password
        - name: private-key
          projected:
            sources:
            - secret:
                name: $NODE_NAME-charon-enr-private-key
        - name: cluster-lock
          projected:
            sources:
            - secret:
                name: cluster-lock
---
apiVersion: v1
kind: Service
metadata:
  name: $NODE_NAME
  namespace: $CLUSTER_NAME
spec:
  selector:
    app: $NODE_NAME
  ports:
  ports:
    - name: http-bootnode
      protocol: TCP
      port: 3640
      targetPort: 3640
    - name: monitoring
      protocol: TCP
      port: 3620
      targetPort: 3620
    - name: validator-api
      protocol: TCP
      port: 3600
      targetPort: 3600
    - name: p2p-tcp
      protocol: TCP
      port: 3610
      targetPort: 3610
    - name: p2p-udp
      protocol: UDP
      port: 3630
      targetPort: 3630
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: $VC_INDEX-teku
  name: $VC_INDEX-teku
  namespace: $CLUSTER_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $VC_INDEX-teku
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: $VC_INDEX-teku
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
        - name: init-chown
          image: busybox
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -ac
            - >
              rm -rf /data/teku/validator_keys 2>/dev/null || true;
              mkdir -p /data/teku/validator_keys;
              cp /validator_keys/* /data/teku/validator_keys;
              chown -R 1000:1000 /data/teku;
          volumeMounts:
            - name: data
              mountPath: /data/teku
            - name: keystore
              mountPath: "/validator_keys"
      containers:
        - name: $VC_INDEX-teku
          image: consensys/teku:$TEKU_VERSION
          command:
            - sh
            - -ace
            - |
              /opt/teku/bin/teku vc \
              --network=auto \
              --log-destination=console \
              --data-base-path=/data/teku \
              --metrics-enabled=true \
              --metrics-host-allowlist="*" \
              --metrics-interface="0.0.0.0" \
              --metrics-port="8008" \
              --validator-keys="/data/teku/validator_keys:/data/teku/validator_keys" \
              --validators-graffiti="Obol Distributed Validator" \
              --beacon-node-api-endpoint="http://$NODE_NAME:3600" \
              --validators-proposer-default-fee-recipient="0x0000000000000000000000000000000000000000";
          volumeMounts:
            - name: keystore
              mountPath: /charon/$NODE_NAME/validator_keys
            - name: private-key
              mountPath: /charon/$NODE_NAME
            - name: cluster-lock
              mountPath: /charon
            - name: data
              mountPath: /data/teku
      volumes:
        - name: keystore
          projected:
            sources:
            - secret:
                name: $NODE_NAME-keystore
            - secret:
                name: $NODE_NAME-password
        - name: private-key
          projected:
            sources:
            - secret:
                name: $NODE_NAME-charon-enr-private-key
        - name: cluster-lock
          projected:
            sources:
            - secret:
                name: cluster-lock
        - name: data
          persistentVolumeClaim:
            claimName: $VC_INDEX-teku-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: $VC_INDEX-teku-pv
  labels:
    type: local
spec:
  storageClassName: local
  capacity:
    storage: 10Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /var/lib/data
  persistentVolumeReclaimPolicy: Delete
  claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: $VC_INDEX-teku-pvc
      namespace: $CLUSTER_NAME
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
  name: $VC_INDEX-teku-pvc
  namespace: $CLUSTER_NAME
spec:
  storageClassName: local
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
---
apiVersion: v1
kind: Service
metadata:
  name: $VC_INDEX-teku
  namespace: $CLUSTER_NAME
spec:
  selector:
    app: $VC_INDEX-teku
  ports:
  ports:
    - name: http-bootnode
      protocol: TCP
      port: 3640
      targetPort: 3640
    - name: metrics
      protocol: TCP
      port: 8008
      targetPort: 8008
