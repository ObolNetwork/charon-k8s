apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bootnode
  name: bootnode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bootnode
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: bootnode
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: bootnode
          image: ghcr.io/obolnetwork/charon:v0.3.0
          command: ["/usr/local/bin/charon"]
          args: ["bootnode"]
          readinessProbe:
            httpGet:
              path: /enr
              port: 16000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /enr
              port: 16000
            initialDelaySeconds: 20
            periodSeconds: 5
          env:
            - name: CHARON_BOOTNODE_HTTP_ADDRESS
              value: "0.0.0.0:16000"
            - name: CHARON_DATA_DIR
              value: "/charon/bootnode"
            - name: CHARON_P2P_BOOTNODES 
              value: ""
            - name: CHARON_P2P_EXTERNAL_HOSTNAME
              value: "bootnode"
            - name: NODES_COUNT
              value: "4"
            - name: THRESHOLD
              value: "3"
          envFrom:
            - configMapRef:
                name: charon-config
          volumeMounts:
            - name: charon
              mountPath: /charon
          workingDir: /charon
      initContainers:
        - name: create-config
          image: ghcr.io/obolnetwork/charon:v0.3.0
          command:
          - sh
          - -ace
          - |
            echo "Cleaning cluster manifest, node config and node keys";
            rm -rf /charon/* 2>/dev/null || true;
            echo "Creating cluster manifests, node config and node keys";
            mkdir /charon/split_keys;
            echo ${KEYSTORE} > /charon/split_keys/keystore-vc.json;
            echo ${KEYSTORE_PASSWORD} > /charon/split_keys/keystore-vc.txt;
            charon create-cluster --split-existing-keys --split-keys-dir=/charon/split_keys --cluster-dir=/charon;
          env:
            - name: KEYSTORE
              valueFrom:
                secretKeyRef:
                  name: keystore
                  key: keystore
            - name: KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keystore
                  key: password
          volumeMounts:
            - name: charon
              mountPath: /charon
      volumes:
        - name: charon
          persistentVolumeClaim:
            claimName: charon-pvc
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: bootnode
spec:
  selector:
    app: bootnode
  ports:
    - name: http
      protocol: TCP
      port: 16000
      targetPort: 16000
    - name: monitoring
      protocol: TCP
      port: 16001
      targetPort: 16001
    - name: validator-api
      protocol: TCP
      port: 16002
      targetPort: 16002
    - name: p2p-tcp
      protocol: TCP
      port: 16003
      targetPort: 16003
    - name: p2p-udp
      protocol: UDP
      port: 16004
      targetPort: 16004
