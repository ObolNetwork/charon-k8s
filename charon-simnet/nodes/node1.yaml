apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app: node1
  labels:
    app: node1
    cluster: charon
  name: node1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        app: node1
      labels:
        app: node1
        cluster: charon
    spec:
      securityContext:
        runAsUser: 0
      containers:
        - name: node1
          image: ghcr.io/obolnetwork/charon:v0.3.0
          command: ["/usr/local/bin/charon"]
          args: ["run"]
          ports:
            - containerPort: 16002
          env:
            - name: CHARON_DATA_DIR
              value: "/charon/node1"
            - name: CHARON_JAEGER_SERVICE
              value: "node1"
            - name: CHARON_P2P_EXTERNAL_HOSTNAME
              value: "node1"
            - name: CHARON_SIMNET_VALIDATOR_MOCK
              value: "false" # Uses Teku VC
          envFrom:
            - configMapRef:
                name: charon-config
          volumeMounts:
            - name: charon
              mountPath: /charon
              readOnly: false
          workingDir: /
      volumes:
        - name: charon
          persistentVolumeClaim:
            claimName: charon-simnet-pvc
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: node1
spec:
  selector:
    app: node1
  ports:
  ports:
    - name: http
      protocol: TCP
      port: 16000
      targetPort: 16000
    - name: monitoring
      protocol: TCP
      port: 16001
      targetPort: 16001
    - name: validator-api
      protocol: TCP
      port: 16002
      targetPort: 16002
    - name: p2p-tcp
      protocol: TCP
      port: 16003
      targetPort: 16003
    - name: p2p-udp
      protocol: UDP
      port: 16004
      targetPort: 16004
