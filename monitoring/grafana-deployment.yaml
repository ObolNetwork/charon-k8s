apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app: grafana
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        app: grafana
      creationTimestamp: null
      labels:
        app: grafana
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      containers:
        - image: grafana/grafana:latest
          name: grafana
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: grafana-config-volume
              mountPath: /etc/grafana/provisioning/datasources/datasource.yml
              subPath: datasource.yml
          volumeMounts:
            - name: grafana-config-volume
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
      volumes:
        - name: grafana-config-volume
          configMap:
            name: grafana-config
            defaultMode: 420
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  grafana.ini: |
    [auth.anonymous]
    enabled = true
    org_role = Admin
  datasource.yml: |
    # config file version
    apiVersion: 1

    # list of datasources that should be deleted from the database
    deleteDatasources:
      - name: Prometheus
        orgId: 1

    # list of datasources to insert/update depending
    # whats available in the database
    datasources:
      # <string, required> name of the datasource. Required
      - name: Prometheus
        # <string, required> datasource type. Required
        type: prometheus
        # <int> org id. will default to orgId 1 if not specified
        orgId: 1
        # <string> url
        url: http://prometheus:9090
        # <string> database password, if used
        password:
        # <string> database user, if used
        user:
        # <string> database name, if used
        database:
        # <bool> enable/disable basic auth
        basicAuth: false
        # <bool> enable/disable with credentials headers
        withCredentials:
        # <bool> mark as default datasource. Max one per org
        isDefault: true
        # <map> fields that will be converted to json and stored in json_data
        jsonData:
          graphiteVersion: "1.1"
          tlsAuth: false
          tlsAuthWithCACert: false
        # <string> json object of data that will be encrypted.
        secureJsonData:
          tlsCACert: "..."
          tlsClientCert: "..."
          tlsClientKey: "..."
        version: 1
        # <bool> allow users to edit datasources from the UI.
        editable: true

